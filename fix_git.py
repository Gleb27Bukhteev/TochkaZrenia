#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å Git
"""

import os
import subprocess
import sys

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"üîß {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            if result.stdout.strip():
                print(f"   –í—ã–≤–æ–¥: {result.stdout.strip()}")
            return True
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞")
            if result.stderr.strip():
                print(f"   –û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def check_git_installed():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git...")
    try:
        result = subprocess.run(['git', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return False
    except FileNotFoundError:
        print("‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
        return False

def fix_git_repository():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
    print("\nüõ†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .git
    if not os.path.exists('.git'):
        print("üìÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
        if not run_command('git init', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git'):
            return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git...")
    run_command('git status', '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞')
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    print("\nüìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    if not run_command('git add .', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤'):
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–∏—Ç–æ–≤
    print("\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–∏—Ç–æ–≤...")
    result = subprocess.run(['git', 'log', '--oneline'], capture_output=True, text=True)
    if result.returncode != 0 or not result.stdout.strip():
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞...")
        if not run_command('git commit -m "Initial commit: Camera monitoring system with OpenCV"', '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞'):
            return False
    else:
        print("‚úÖ –ö–æ–º–º–∏—Ç—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ç–æ–∫
    print("\nüåø –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ç–æ–∫...")
    result = subprocess.run(['git', 'branch'], capture_output=True, text=True)
    if result.returncode == 0:
        branches = result.stdout.strip().split('\n')
        current_branch = None
        for branch in branches:
            if branch.startswith('*'):
                current_branch = branch[2:].strip()
                break
        
        print(f"üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: {current_branch}")
        
        if current_branch != 'main':
            print("üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –≤ main...")
            if not run_command('git branch -M main', '–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏'):
                return False
    
    return True

def check_remote_repository():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    result = subprocess.run(['git', 'remote', '-v'], capture_output=True, text=True)
    if result.returncode == 0 and result.stdout.strip():
        print("‚úÖ –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print(f"   {result.stdout.strip()}")
        return True
    else:
        print("‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False

def setup_remote_repository():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"""
    print("\nüåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    remote_url = "https://github.com/Gleb27Bukhteev/TochkaZrenia.git"
    
    print(f"üîó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {remote_url}")
    if not run_command(f'git remote add origin {remote_url}', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è'):
        return False
    
    return True

def push_to_remote():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("\nüöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...")
    if not run_command('git push -u origin main', '–ó–∞–≥—Ä—É–∑–∫–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π'):
        return False
    return True

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Git")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    if not check_git_installed():
        print("\n‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git for Windows: https://git-scm.com/download/win")
        print("   –ò–ª–∏ —á–µ—Ä–µ–∑ winget: winget install Git.Git")
        sys.exit(1)
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if not fix_git_repository():
        print("\n‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if not check_remote_repository():
        if not setup_remote_repository():
            print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
            sys.exit(1)
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if not push_to_remote():
        print("\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub")
        print("   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ª–∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
        print("   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        sys.exit(1)
    
    print("\nüéâ –£—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–µ–∫—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Git!")
    print("üåê –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/Gleb27Bukhteev/TochkaZrenia")

if __name__ == "__main__":
    main()
